<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://dbuscombe-usgs.github.io/doodle_labeller/blog</id>
    <title>Doodle Labeller (Doodler) Blog</title>
    <updated>2020-08-04T06:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://dbuscombe-usgs.github.io/doodle_labeller/blog"/>
    <subtitle>The best place to stay up-to-date with the latest Doodle Labeller (Doodler) news and events.</subtitle>
    <logo>https://dbuscombe-usgs.github.io/doodle_labeller/img/favicon.ico</logo>
    <rights>Copyright Â© 2020 Marda Science, LLC</rights>
    <entry>
        <title type="html"><![CDATA[What makes a "class"?]]></title>
        <id>https://dbuscombe-usgs.github.io/doodle_labeller/blog/2020/08/04/blog-post.html</id>
        <link href="https://dbuscombe-usgs.github.io/doodle_labeller/blog/2020/08/04/blog-post.html"/>
        <updated>2020-08-04T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p><code>Doodler</code> segments images into &quot;classes&quot; that are discrete labels that you define to represent and reduce the dimensionality of features and objects in your imagery.</p> <p>Each class really represents a spectrum of textures, colors, and spatial ext...</p>]]></summary>
        <author>
            <name>Dan Buscombe</name>
            <uri>http://twitter.com/magic_walnut</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Splitting up large geoTIFF orthomosaics]]></title>
        <id>https://dbuscombe-usgs.github.io/doodle_labeller/blog/2020/08/01/blog-post.html</id>
        <link href="https://dbuscombe-usgs.github.io/doodle_labeller/blog/2020/08/01/blog-post.html"/>
        <updated>2020-08-01T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p><code>Doodler</code> can work with really large images, but it is usually best to keep your images &lt; 10,000 pixels in any dimension, because then the program will do CRF inference on the whole image at once rather than in chunks. This usually results in better...</p>]]></summary>
        <author>
            <name>Dan Buscombe</name>
            <uri>http://twitter.com/magic_walnut</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[merge a 3-band and 1-band image]]></title>
        <id>https://dbuscombe-usgs.github.io/doodle_labeller/blog/2020/07/31/blog-post.html</id>
        <link href="https://dbuscombe-usgs.github.io/doodle_labeller/blog/2020/07/31/blog-post.html"/>
        <updated>2020-07-31T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p><code>Doodler</code> can use 1, 3, and 4-band input imagery. If the imagery is 3-band, it is assumed to be RGB and is, by default, augmented with 3 additional derivative bands.</p> <p>But how do you make a 4-band image from a 3-band image and a 1-band image?</p> <p>That additi...</p>]]></summary>
        <author>
            <name>Dan Buscombe</name>
            <uri>http://twitter.com/magic_walnut</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[no spaces in filenames!]]></title>
        <id>https://dbuscombe-usgs.github.io/doodle_labeller/blog/2020/07/30/blog-post.html</id>
        <link href="https://dbuscombe-usgs.github.io/doodle_labeller/blog/2020/07/30/blog-post.html"/>
        <updated>2020-07-30T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>Spaces in image file names are problematic for the program because it uses filename string subsections to match images to outputs. White space is the escape character for most programming languages.</p> <p>A one-liner for replacing white spaces with undersc...</p>]]></summary>
        <author>
            <name>Dan Buscombe</name>
            <uri>http://twitter.com/magic_walnut</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[batch "redoing"]]></title>
        <id>https://dbuscombe-usgs.github.io/doodle_labeller/blog/2020/07/29/blog-post.html</id>
        <link href="https://dbuscombe-usgs.github.io/doodle_labeller/blog/2020/07/29/blog-post.html"/>
        <updated>2020-07-29T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>If you want to redo all your previous doodles with the new doodler, put all your images in data/images and put the npy files in data/label_images. Then you can call doodler like this in a loop:</p> <pre><code class="hljs"><span class="hljs-keyword">for</span> <span class="hljs-keyword">file</span> in data/label_images/*.npy <span class="hljs-keyword">do</span> <span class="hljs-keyword">python</span> doodler.<span class="hljs-keyword">py...</span></code></pre>]]></summary>
        <author>
            <name>Dan Buscombe</name>
            <uri>http://twitter.com/magic_walnut</uri>
        </author>
    </entry>
</feed>